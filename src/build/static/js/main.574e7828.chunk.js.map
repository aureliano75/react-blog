{"version":3,"sources":["resources/pic1.jpg","resources/pic2.jpg","resources/pic3.jpg","resources/paint.jpg","resources/guitar.jpg","resources/code.jpg","resources/profile.jpg","components/Slider.js","components/ShowCase.js","pages/HomePage.js","pages/AboutPage.js","pages/article-content.js","components/ArticlesList.js","pages/ArticlesListPage.js","pages/NotFoundPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/ArticlePage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","images","pic1","pic2","pic3","zoomOutProperties","duration","transitionDuration","infinite","indicators","scale","arrows","Slider","className","map","each","index","key","style","width","src","Showcase","code","alt","paint","guitar","HomePage","Fragment","ShowCase","AboutPage","profile","class","href","target","articles","name","title","content","ArticlesList","article","to","substring","ArticlesListPage","articleContent","NotFoundPage","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","alert","i","anchor","length","JSON","stringify","headers","type","value","onChange","event","rows","cols","on","ArticlePage","match","params","find","articleInfo","useEffect","console","log","fetchData","otherArticles","filter","paragraph","NavBar","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.574e7828.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pic1.23522045.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic2.be038e28.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic3.5ec6ef92.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paint.bff43f46.jpg\";","module.exports = __webpack_public_path__ + \"static/media/guitar.cc07907f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/code.ecf4ff15.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile.dda0ba82.jpg\";","import React from 'react';\r\nimport pic1 from '../resources/pic1.jpg';\r\nimport pic2 from '../resources/pic2.jpg';\r\nimport pic3 from '../resources/pic3.jpg';\r\nimport { Zoom } from 'react-slideshow-image';\r\n\r\nconst images = [\r\n    pic1,\r\n    pic2,\r\n    pic3\r\n];\r\n\r\nconst zoomOutProperties = {\r\n    duration: 10000,\r\n    transitionDuration: 1000,\r\n    infinite: true,\r\n    indicators: true,\r\n    scale: 0.4,\r\n    arrows: true\r\n}\r\n\r\nconst Slider = () => {\r\n    return (\r\n        <div className=\"slide-container\">\r\n            <Zoom {...zoomOutProperties}>\r\n                {\r\n                    images.map((each, index) => <img key={index} style={{ width: \"100%\" }} src={each} />)\r\n                }\r\n            </Zoom>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slider;","import React from 'react';\r\nimport paint from '../resources/paint.jpg'\r\nimport guitar from '../resources/guitar.jpg'\r\nimport code from '../resources/code.jpg'\r\n\r\nconst Showcase = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"maincontainer\">\r\n                <h2>Who am I?</h2>\r\n                <div className=\"col-sm-4\">\r\n                    <img src={code} alt=\"code\" width=\"100%\"></img>\r\n                    <p>I'm a programmer. I spend most of my time learning new technologies and programming languages. </p>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <img src={paint} alt=\"paint\" width=\"100%\"></img>\r\n                    <p>I'm an artist. I love visiting art museums and painting. </p>\r\n                </div>\r\n\r\n                <div className=\"col-sm-4\">\r\n                    <img src={guitar} alt=\"guitar\" width=\"100%\"></img>\r\n                    <p>I'm a musician. I use the guitar to express the melody in my mind.</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Showcase;\r\n\r\n","import React from 'react';\r\nimport Slider from '../components/Slider'\r\nimport ShowCase from '../components/ShowCase'\r\nconst HomePage = () => (\r\n    <React.Fragment>\r\n        <h1>Welcome to my React.js playground.</h1>\r\n        <Slider />\r\n        <ShowCase />\r\n    </React.Fragment>\r\n\r\n\r\n);\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport profile from '../resources/profile.jpg'\r\nconst AboutPage = () => (\r\n    <React.Fragment><h1>About Me</h1>\r\n        <img src={profile} alt=\"profile\" class=\"prof\"></img>\r\n        <div className=\"prof\">\r\n            <p>Jin graduated from University of Wisconsin-Milwaukee with a Bachelor of Science Degree in Information Science & Psychology. Jin recieved undergraduate-level academic training on Information Systems, Web Development, Application Development, Cyber Security, Applied Behavior Analysis, and Psychological Statististics</p>\r\n            <div className=\"contact\">\r\n                <h3>Get In Touch</h3>\r\n                (414)324-0821 <br />\r\n                <a href=\"mailto:aureliano75@live.com\" target=\"_blank\">aureliano75@live.com</a><br />\r\n                <a href=\"https://www.linkedin.com/in/jin-cui-1b20b968/\">Linkedin</a><br />\r\n                <a href=\"https://github.com/aureliano75/react-blog-code \">GitHub</a>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </React.Fragment>\r\n\r\n\r\n);\r\n\r\nexport default AboutPage;","const articles = [\r\n    {\r\n        name: 'about',\r\n        title: 'About This Website',\r\n        content: ['This website demonstrates the usecases of React.js, Node.js, JavaScript, HTML, CSS, MongoDB, and AWS EC2.',\r\n            'Note that the upvote count and the comments are posted to MongoDB that runs on the AWS EC2 server.'\r\n\r\n        ]\r\n    },\r\n    {\r\n        name: 'impressionism',\r\n        title: 'Impressionism',\r\n        content: [\r\n            'Deemed by many to be unorthodox, impressionists like Van Gogh, Cézanne, and Monet struggled to gain populatity in their time.'\r\n        ],\r\n    },\r\n    {\r\n        name: 'modern-art',\r\n        title: 'Modern Art',\r\n        content: ['Is it an image of randomly scramble squares or is it portraying a sitting man playing flute?'\r\n\r\n        ]\r\n    },\r\n    {\r\n        name: 'learn-react',\r\n        title: 'Learn React',\r\n        content: ['Learn React.js by doing it! Even if it means 1000 fails!'\r\n\r\n        ]\r\n    },\r\n];\r\n\r\nexport default articles;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst ArticlesList = ({ articles }) => (\r\n    <React.Fragment>\r\n        {articles.map((article, key) => (\r\n            <Link className=\"article-list-item\" key={key} to={`/article/${article.name}`}>\r\n                <h3>{article.title}</h3>\r\n                <p>{article.content[0].substring(0, 150)}...</p>\r\n            </Link>\r\n\r\n        ))}\r\n\r\n    </React.Fragment>);\r\n\r\nexport default ArticlesList;","import React from 'react';\r\nimport articleContent from './article-content';\r\nimport ArticlesList from '../components/ArticlesList'\r\nconst ArticlesListPage = () => (\r\n    <React.Fragment><h1>Articles</h1>\r\n        <ArticlesList articles={articleContent} />\r\n\r\n\r\n    </React.Fragment>\r\n);\r\n\r\nexport default ArticlesListPage;","import React from 'react'\r\n\r\nconst NotFoundPage = () => (\r\n    <h1>404: Page Not Found</h1>\r\n);\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\n\r\nconst CommentsList = ({ comments }) => (\r\n\r\n    <>\r\n        <div>\r\n            <h3>Comments:</h3>\r\n            {comments.map((comment, key) => (\r\n                <div className=\"comment\" key={key}>\r\n                    <h4>{comment.username}</h4>\r\n                    <p>{comment.text}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </>\r\n);\r\n\r\nexport default CommentsList;","import React from 'react';\r\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\r\n    const upvoteArticle = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\r\n            method: 'post',\r\n        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n    }\r\n    return (\r\n        <div id=\"upvotes\">\r\n            <p>This post has been upvoted {upvotes} times.</p>\r\n            <p><button onClick={() => upvoteArticle()}>Upvote</button></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpvotesSection;","import React, { useState } from 'react';\r\n\r\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [commentText, setCommentText] = useState('');\r\n\r\n    const addComment = async () => {\r\n        if (username === \"\" || commentText === \"\") {\r\n            alert(\"Name or Comment cannot be empty\");\r\n            setUsername('');\r\n            setCommentText('');\r\n        }\r\n        else {\r\n            for (let i = 0; i < username.anchor.length; i++) {\r\n                if (username[i] === \"<\" || username[i] === \">\") {\r\n                    alert(\"Illegal character < or >\");\r\n                    setUsername('');\r\n                    setCommentText('');\r\n                    break;\r\n                } else {\r\n                    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\r\n\r\n                        method: 'post',\r\n                        body: JSON.stringify({ username, text: commentText }),\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        }\r\n                    });\r\n                    const body = await result.json();\r\n                    setArticleInfo(body);\r\n                    setUsername('');\r\n                    setCommentText('');\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    return (<div id=\"add-comment-form\">\r\n        <h3>Add a Comment</h3>\r\n        <label>Name:\r\n        <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\r\n        </label><br></br>\r\n        <label>\r\n            Comment:\r\n        <textarea rows=\"4\" cols=\"50\" on value={commentText} onChange={(event) => setCommentText(event.target.value)} />\r\n        </label><br></br>\r\n        <button onClick={() => addComment()}>Add Comment</button>\r\n    </div>);\r\n\r\n\r\n}\r\n\r\nexport default AddCommentForm;","import React, { useState, useEffect } from 'react';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport NotFoundPage from './NotFoundPage';\r\nimport articleContent from './article-content';\r\nimport CommentsList from '../components/CommentsList';\r\nimport UpvotesSection from '../components/UpvotesSection';\r\nimport AddCommentForm from '../components/AddCommentForm'\r\n\r\nconst ArticlePage = ({ match }) => {\r\n    const name = match.params.name;\r\n    const article = articleContent.find(article => article.name === name);\r\n\r\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch(`/api/articles/${name}`);\r\n            const body = await result.json();\r\n            console.log(body);\r\n            setArticleInfo(body);\r\n        };\r\n        fetchData();\r\n    }, [name]);\r\n\r\n    if (!article) return <NotFoundPage />\r\n\r\n    const otherArticles = articleContent.filter(article => article.name !== name);\r\n\r\n    return (\r\n        <>  <div>\r\n            <h1>{article.title}</h1>\r\n\r\n            {article.content.map((paragraph, key) => (\r\n                <p key={key}>{paragraph}</p>\r\n            ))}\r\n        </div>\r\n\r\n            <CommentsList comments={articleInfo.comments} />\r\n            <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\r\n            <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\r\n            <h3>Other Articles:</h3>\r\n            <ArticlesList articles={otherArticles} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ArticlePage;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nconst NavBar = () => (\r\n    <nav>\r\n        <ul>\r\n            <li> <Link to=\"/\">Home</Link></li>\r\n            <li> <Link to=\"/about\">About</Link></li>\r\n            <li> <Link to=\"/articles-list\">Articles</Link></li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\n\r\nexport default NavBar;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route, Switch,\n} from 'react-router-dom'\nimport HomePage from './pages/HomePage'\nimport AboutPage from './pages/AboutPage'\nimport ArticlesListPage from './pages/ArticlesListPage'\nimport ArticlePage from './pages/ArticlePage'\nimport NavBar from './NavBar'\nimport NotFoundPage from './pages/NotFoundPage'\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Router><div className=\"App\">\n      <NavBar />\n      <div className=\"page-body\">\n        <Switch><Route path=\"/\" component={HomePage} exact />\n          <Route path=\"/about\" component={AboutPage} />\n          <Route path=\"/articles-list\" component={ArticlesListPage} />\n          <Route path=\"/article/:name\" component={ArticlePage} />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </div>\n    </div> </Router>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}